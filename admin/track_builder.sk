# File: track_builder.sk
# Description: Track building and management system for Race Clicker

options:
    prefix: &6&lRaceClicker &8» &aTrackBuilder &8»
    track_builder_permission: "raceclicker.admin.trackbuilder"
    
# Variables:
# {admin::%player's uuid%::building_track_id} - ID of track being built
# {admin::%player's uuid%::last_waypoint} - Last waypoint location
# {admin::%player's uuid%::building_mode} - Current building mode (waypoint, start, finish)

# Command to start building a track
command /buildtrack [<text>]:
    permission: {%track_builder_permission%}
    trigger:
        if arg-1 is not set:
            send "{@prefix} &cUsage: /buildtrack <track_id>"
            stop
        
        set {_uuid} to player's uuid
        set {_track_id} to arg-1
        
        # Check if track already exists
        if {tracks::%{_track_id}%::name} is set:
            send "{@prefix} &cTrack %{_track_id}% already exists!"
            stop
        
        # Initialize track variables
        set {admin::%{_uuid}%::building_track_id} to {_track_id}
        set {admin::%{_uuid}%::building_mode} to "start"
        set {admin::%{_uuid}%::last_waypoint} to player's location
        
        send "{@prefix} &aStarting track build for %{_track_id}%"
        send "{@prefix} &eLeft-click to set start location"
        send "{@prefix} &eRight-click to set waypoints"
        send "{@prefix} &eShift+Right-click to set finish region"
        send "{@prefix} &eUse /savepoints to save current track"

# Command to save track points
command /savepoints:
    permission: {%track_builder_permission%}
    trigger:
        set {_uuid} to player's uuid
        set {_track_id} to {admin::%{_uuid}%::building_track_id}
        
        if {_track_id} is not set:
            send "{@prefix} &cNo track is being built! Use /buildtrack first."
            stop
        
        # Validate track data
        if not {admin::%{_uuid}%::last_waypoint} is set:
            send "{@prefix} &cNo start location set!"
            stop
        if size of {admin::%{_uuid}%::waypoints::*} < 2:
            send "{@prefix} &cNot enough waypoints! (Need at least 2)"
            stop
        if not {admin::%{_uuid}%::finish_region} is set:
            send "{@prefix} &cNo finish region set!"
            stop

        # Save track data
        set {tracks::%{_track_id}%::name} to "Track %{_track_id}%"
        set {tracks::%{_track_id}%::start_location} to {admin::%{_uuid}%::last_waypoint}
        set {tracks::%{_track_id}%::waypoints::*} to {admin::%{_uuid}%::waypoints::*}
        set {tracks::%{_track_id}%::finish_region} to {admin::%{_uuid}%::finish_region}

        # Calculate track length from waypoints
        set {_length} to 0
        loop {tracks::%{_track_id}%::waypoints::*}:
            if loop-index > 1:
                set {_prev_loc} to element at loop-index - 1 of {tracks::%{_track_id}%::waypoints::*}
                set {_current_loc} to loop-value
                add magnitude of ({_current_loc} subtract {_prev_loc}) to {_length}
        set {tracks::%{_track_id}%::length} to {_length}
        
        # Calculate track length from waypoints
        set {_length} to 0
        loop {tracks::%{_track_id}%::waypoints::*}:
            if loop-index > 1:
                set {_prev_loc} to loop-value-1
                set {_current_loc} to loop-value
                add magnitude of ({_current_loc} subtract {_prev_loc}) to {_length}
        
        set {tracks::%{_track_id}%::length} to {_length}
        
        send "{@prefix} &aTrack %{_track_id}% saved successfully!"
        send "{@prefix} &eTrack length: %{_length}% blocks"
        send "{@prefix} &eWaypoints: %size of {tracks::%{_track_id}%::waypoints::*}%"
        
        # Clean up
        delete {admin::%{_uuid}%::building_track_id}
        delete {admin::%{_uuid}%::building_mode}
        delete {admin::%{_uuid}%::last_waypoint}
        delete {admin::%{_uuid}%::waypoints::*}
        delete {admin::%{_uuid}%::finish_region}

# Command to list all tracks
command /listtracks:
    permission: {%track_builder_permission%}
    trigger:
        send "{@prefix} &aAvailable Tracks:" to player
        loop all keys of {tracks::*}:
            if loop-value starts with "::":
                continue
            send "&7- %{loop-value}% &8(&6%{tracks::%{loop-value}%::length}% blocks&8)" to player

# Command to test a track
command /testtrack [<text>]:
    permission: {%track_builder_permission%}
    trigger:
        if arg-1 is not set:
            send "{@prefix} &cUsage: /testtrack <track_id>"
            stop
        
        set {_track_id} to arg-1
        if {tracks::%{_track_id}%::name} is not set:
            send "{@prefix} &cTrack %{_track_id}% not found!"
            stop
        
        # Create test citizen
        create new citizen named "TestCitizen_%{_track_id}%" at {tracks::%{_track_id}%::start_location}
        set {_citizen} to last created citizen
        
        # Set waypoints
        set {_waypoints} to {tracks::%{_track_id}%::waypoints::*}
        loop {_waypoints}:
            set {_loc} to loop-value
            set {_citizen}'s location to {_loc}
            wait 1 second
        
        # Test finish region
        set {_citizen}'s location to {tracks::%{_track_id}%::finish_region}
        wait 1 second
        
        # Clean up
        remove {_citizen}
        
        send "{@prefix} &aTrack test completed!"

# Building mode changes
on left click:
    if player has permission {%track_builder_permission%}:
        set {_uuid} to player's uuid
        if {admin::%{_uuid}%::building_track_id} is set:
            set {admin::%{_uuid}%::building_mode} to "start"
            send "{@prefix} &aBuilding mode: &eStart Location"
            set {admin::%{_uuid}%::last_waypoint} to player's location

on right click:
    if player has permission {%track_builder_permission%}:
        set {_uuid} to player's uuid
        if {admin::%{_uuid}%::building_track_id} is set:
            if {admin::%{_uuid}%::building_mode} is "start":
                set {admin::%{_uuid}%::building_mode} to "waypoint"
                send "{@prefix} &aBuilding mode: &eWaypoints"
            else:
                set {_current_loc} to player's location
                if {admin::%{_uuid}%::last_waypoint} is set:
                    add {_current_loc} to {admin::%{_uuid}%::waypoints::*}
                    set {admin::%{_uuid}%::last_waypoint} to {_current_loc}
                    send "{@prefix} &aAdded waypoint %{size of {admin::%{_uuid}%::waypoints::*}}%"

on shift right click:
    if player has permission {%track_builder_permission%}:
        set {_uuid} to player's uuid
        if {admin::%{_uuid}%::building_track_id} is set:
            set {_current_loc} to player's location
            set {admin::%{_uuid}%::finish_region} to {_current_loc}
            send "{@prefix} &aSet finish region at %{_current_loc}%"
            set {admin::%{_uuid}%::building_mode} to "start"
            send "{@prefix} &aBuilding mode: &eStart Location"
            
            # Show finish region particles
            loop 20 times:
                set {_offset} to vector(random between -1 and 1, 0, random between -1 and 1)
                spawn particle "end_rod" at {_current_loc} add {_offset}
